{
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.Seq" ], //Serilogun sink yapacaðý platformlarýn namespacesini girdik
    "MinimumLevel": "Information",                                                  // log seviyelerinin minimum aþlangýç yerini belirledik
    "WriteTo": [                                                                   //Log verileriin hangi sinke azdýralcaðýný belirttik
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "apiKey": "hY7i2m8w6NMDHKDBIVCv"
        }
      }
    ]
  }

  //"Serilog": {
  //  "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],                   
  //  "MinimumLevel": "Information",                                                
  //  "WriteTo": [
  //    { "Name": "Console" },
  //    {
  //      "Name": "File",
  //      "Args": { "path": "Logs/log.txt" }
  //    }
  //  ],
  //  "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ],              // zenginleþtiriciler kýsmý, logda ekstra olarak olmasý gereknleri ekledik
  //  "Destructure": [                                                                //serilogda apstract parametre türlerini belirlemeizi saðalyan kýsým
  //    {                                       //abstract parameter: serilog => loglarý serialize etmekten gelir. Burakdai serileþtirmek destructure ile hemen hemen eþ anlamlýdýr
  //      "Args": { "maximumDestructuringDepth": 4 }
  //    },
  //    {
  //      "Name": "ToMaximumStringLength",
  //      "Args": { "maximumStringLength": 100 }
  //    },
  //    {
  //      "Name": "ToMaximumCollectionCount",
  //      "Args": { "maximumCollectionCount": 10 }
  //    }
  //  ],
  //  "Properties": {                                                                // serilog seviyesinde uygulamaya dair genel tanýmlamaalr yapmamýzý saðlar
  //    "Application": "Sample"
  //  }
  //}
}
